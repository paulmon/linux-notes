# set mouse mode on
set -g mouse on
set -g mode-keys vi
set-option -s set-clipboard off

# vim copy-paste
bind P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -sel clip -i"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -sel clip -i"
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# history buffer size
set-option -g history-limit 3000

# resize pane
bind-key -T prefix C-Up resize-pane -U 10
bind-key -T prefix C-Down resize-pane -D 10
bind-key -T prefix C-Left resize-pane -L 10
bind-key -T prefix C-Right resize-pane -R 10

# C-b is not acceptable -- Vim uses it
#set-option -g prefix C-a
#bind-key C-a last-window

# Start numbering at 1
set -g base-index 1
set -g pane-base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Set status bar
set -g status-bg black
set -g status-fg white
set -g status-left ""
set -g status-right "#[fg=green]#H"

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
bind-key a send-prefix

# Activity monitoring
#setw -g monitor-activity on
#set -g visual-activity on

# Example of using a shell command in the status line
#set -g status-right "#[fg=yellow]#(uptime | cut -d ',' -f 2-)"

# Highlight active window
#set-window-option -g window-status-current-bg redgg
